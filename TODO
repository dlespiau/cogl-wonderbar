== Cogl

* cogl: could cogl_quaternion_multiply() multiply in place?
* precise right, top, left, bottom order instead of first/second in
  cogl_matrix_ortho()
* add the cogl_color_init_* symbols to the documention
* cogl_matrix_look_at() behaves like gluLookAt() and multiplies the incoming
  matrix so you need to give it an identity matrix

== Entity/Components

* Compute the gl_NormalMatrix ourselves
* expose the easing modes in AnimationClip
* Port the mash code to the new AttributesBuffer API
* create a world object with all the entities
* organize the entities in a tree (no shit!)
* fix the directional light transformation

== Shadows

* don't draw the color buffer in the shadow FBO
* use a specially crafted pipeline to draw into the shadow FBO to reduce
  the drawing cost (no materials, no lighting, ...)

== Bigger

* arcball orientation controller:
  http://research.cs.wisc.edu/graphics/Courses/559-f2001/Examples/Gl3D/arcball-gems.pdf
* point light
* SSAO

== Write about the learnings

* lighting (phong)
* "smooth" vertices
* entity/components system
* quaternions
* shadow mapping
